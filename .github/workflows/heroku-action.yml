#name: 'Spring Boot App to Heroku Container' #set whatevername you want to your github job
#on:
#  push:
#    branches: [ "main" ]
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Build, Push and Deploy to Heroku #set the whatever name you want to this step
#        id: heroku
#        uses: jctaveras/heroku-deploy@v1.0.0  # use the latest version of the action
#        with:
#          email: ${{ secrets.HEROKU_EMAIL }} # your heroku email
#          api_key: ${{ secrets.HEROKU_API_KEY }} # your  heroku api key
#          app_name: ${{ secrets.HEROKU_APP_NAME }} # you aplication name
#          dockerfile: './docker/Dockerfile_prod' # set the path to the folder wher the Dokerfile is located
#          options: '' # Docker Build Options
#          formation: '' # Docker Dyno Formation. By default is web
name: Build & Push to Heroku Docker Registry

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Git Checkout
      uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Heroku Container Registry login
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    run: heroku container:login
    - name: Build and push
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web
      - name: Release
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web